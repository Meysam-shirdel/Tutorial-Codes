# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CdIQQPlRRprCNNbld4oWBhhLrRi2oNxK
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

from tensorflow.keras.layers import Conv2D, MaxPool2D, Flatten, Dense
from tensorflow.keras import losses, optimizers,metrics

Classes = ['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']

(x_t, y_t), (x_ts, y_ts) = tf.keras.datasets.cifar10.load_data()

x_train = x_t[:10000,:]/255
y_train = y_t[:10000]
x_test = x_ts[:1000,:]/255
y_test = y_ts[:1000]

x_test.shape

l1 = 2
l2 = 10
fig, ax = plt.subplots(2,l2)
for i in range(l1):
  for j in range(l2):
    ax[i,j].plot()
    ax[i,j].imshow(x_train[j])

# Creat CNN
CNN = tf.keras.Sequential()
CNN.add(Conv2D(16,(3,3),activation='relu',input_shape=(32,32,3)))
CNN.add(Conv2D(10,3,activation='relu'))
CNN.add(MaxPool2D(pool_size=(3,3)))
CNN.add(Conv2D(10,3,activation='relu'))
CNN.add(MaxPool2D((3,3)))
CNN.add(Flatten())
CNN.add(Dense(10,activation='softmax'))

CNN.summary()

CNN.compile(optimizer=optimizers.Adam(), loss=losses.SparseCategoricalCrossentropy()
            ,metrics=[metrics.SparseCategoricalAccuracy(),metrics.MeanAbsoluteError()])

CNN.fit(x_train, y_train, batch_size=32, verbose=1, epochs=3)

CNN.evaluate(x_test,y_test)

image_no = np.random.choice(x_test.shape[0])
test_sample = x_test[image_no]
plt.imshow(test_sample)
pred= CNN.predict(test_sample[np.newaxis,...,np.newaxis])
lst = np.argsort(pred,axis=1)[0,6:]
#lst.sort(reverse=True)
#Classes[lst]
print(pred)
print(lst)
k=3
for i in range(4):
  print(Classes[lst[k]])
  k=k-1

[ Classes[i] for i in lst]

x_test.shape