# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T6ScTsJOm_aBCAIlo2GUeqHRyOEEe1iI
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

import os

import zipfile

# Download zip file of pizza_steak images
#!wget https://storage.googleapis.com/ztm_tf_course/food_vision/pizza_steak.zip

zipref = zipfile.ZipFile("pizza_steak.zip",'r')
zipref.extractall()
zipref.close()

!ls pizza_steak/train/

import matplotlib.image as img
image = img.imread("pizza_steak/train/pizza/1008941.jpg")
plt.imshow(image)
print(image.shape)

from tensorflow.keras.preprocessing.image import ImageDataGenerator

tf.random.set_seed(42)
train_datagen = ImageDataGenerator(rescale = 1./255)
valid_datagen = ImageDataGenerator(rescale=1./255)

train_dir = 'pizza_steak/train/'
test_dir = 'pizza_steak/test/'

train_data = train_datagen.flow_from_directory(train_dir,batch_size=32,shuffle=False,target_size=(224,224)
                                              ,class_mode='binary')
valid_data = valid_datagen.flow_from_directory(test_dir,batch_size=32,target_size=(224,224),class_mode='binary')

#Create a CNN ------------------
mymodel = tf.keras.models.Sequential()

#-- first conv & pool 
mymodel.add(tf.keras.layers.Conv2D(filters=10,kernel_size=3, # can also be (3, 3)
                                   activation="relu", 
                                   input_shape=(224, 224, 3)))
mymodel.add(tf.keras.layers.Conv2D(10,3,activation='relu'))
mymodel.add(tf.keras.layers.MaxPool2D(pool_size=2, padding='valid'))
#-- second conv & pool 
mymodel.add(tf.keras.layers.Conv2D(10,3,activation='relu'))
mymodel.add(tf.keras.layers.Conv2D(10,3,activation='relu'))
mymodel.add(tf.keras.layers.MaxPool2D(2))
#-- third conv & pool 
mymodel.add(tf.keras.layers.Flatten())
mymodel.add(tf.keras.layers.Dense(1,activation='sigmoid'))
#-------------------

# Compile CNN Model
mymodel.compile(loss="binary_crossentropy",
              optimizer=tf.keras.optimizers.Adam(),
              metrics=["accuracy"])

# Fit CNN Model
history_1 = mymodel.fit(train_data,
                        epochs=5,
                        steps_per_epoch=len(train_data),
                        validation_data=valid_data,
                        validation_steps=len(valid_data))

print(history_1.history)

import pandas as pd

metrics_df = pd.DataFrame(history_1.history)
metrics_df[["loss","val_loss"]].plot();

import matplotlib.image as img
image = img.imread("pizza_steak/train/pizza/1008941.jpg")
plt.imshow(image)
tes_data = train_datagen.flow_from_directory("pizza_steak/train/pizza/",batch_size=32,shuffle=False,target_size=(224,224)
                                              ,class_mode='binary')
print(mymodel.predict(tes_data,1))